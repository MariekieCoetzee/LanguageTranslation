@page "/weather"
@using Microsoft.Extensions.Localization

<PageTitle>@localizer["Weather"]</PageTitle>

<h1>@localizer["Weather"]</h1>
<p>@localizer["SubHeading"]</p>

@if (forecasts == null)
{
    <p>
        <em>@localizer["Loading"]..</em>
    </p>
}
else
{
    <table class="table">
        <thead>
        <tr>
            <th>@localizer["Date"]</th>
            <th aria-label="@localizer["Temperature"] in Celsius">Temp. (C)</th>
            <th aria-label="@localizer["Temperature"] in Farenheit">Temp. (F)</th>
            <th>@localizer["Summary"]</th>
                           </tr>
        </thead>
        <tbody>
        @foreach (var forecast in forecasts)
        {
            <tr>
                <td>@forecast.Date.ToShortDateString()</td>
                <td>@forecast.TemperatureC</td>
                <td>@forecast.TemperatureF</td>
                <td>@forecast.Summary</td>
            </tr>
        }
        </tbody>
    </table>
}

@code {
    
    [Inject] private IStringLocalizer<BlazorServer.Locals.Resources> localizer { get; set; } = default!;
    private WeatherForecast[]? forecasts;
    protected override async Task OnInitializedAsync()
    {
        // Simulate asynchronous loading to demonstrate a loading indicator
        await Task.Delay(500);

        var startDate = DateOnly.FromDateTime(DateTime.Now);
        var summaries = new[] { localizer["Freezing"], localizer["Bracing"], localizer["Chilly"], localizer["Cool"], localizer["Mild"], localizer["Warm"], localizer["Balmy"], localizer["Hot"], localizer["Sweltering"], localizer["Scorching"] };
        forecasts = Enumerable.Range(1, 5).Select(index => new WeatherForecast
        {
            Date = startDate.AddDays(index),
            TemperatureC = Random.Shared.Next(-20, 55),
            Summary = summaries[Random.Shared.Next(summaries.Length)]
        }).ToArray();
    }

    private class WeatherForecast
    {
        public DateOnly Date { get; set; }
        public int TemperatureC { get; set; }
        public string? Summary { get; set; }
        public int TemperatureF => 32 + (int)(TemperatureC / 0.5556);
    }

}